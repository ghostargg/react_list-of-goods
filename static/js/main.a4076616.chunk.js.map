{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sortedGoods","NONE","ALPHABET","sort","firstGood","secondGood","localeCompare","LENGTH","length","reverse","App","state","handleSortAlphabetically","setState","handleSortByLength","handleReverse","handleReset","this","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAeK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAErBI,EAAwB,GAgB5B,OAdIH,IAAaJ,EAASQ,KACxBD,EAAcD,EACLF,IAAaJ,EAASS,SAC/BF,EAAcD,EACXI,MAAK,SAACC,EAAWC,GAAZ,OAA2BD,EAAUE,cAAcD,MAClDR,IAAaJ,EAASc,SAC/BP,EAAcD,EACXI,MAAK,SAACC,EAAWC,GAAZ,OAA2BD,EAAUI,OAASH,EAAWG,WAG/DV,IACFE,EAAc,YAAIA,GAAaS,WAG1BT,G,SAlCJP,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA0CE,IAAMiB,EAAb,4MACEC,MAAQ,CACNb,YAAY,EACZD,SAAUJ,EAASQ,MAHvB,EAMEW,yBAA2B,WACzB,EAAKC,SAAS,CAAEhB,SAAUJ,EAASS,YAPvC,EAUEY,mBAAqB,WACnB,EAAKD,SAAS,CAAEhB,SAAUJ,EAASc,UAXvC,EAcEQ,cAAgB,WACd,EAAKF,UAAS,SAAAF,GAAK,MAAK,CAAEb,YAAaa,EAAMb,gBAfjD,EAkBEkB,YAAc,WACZ,EAAKH,SAAS,CAAEhB,SAAUJ,EAASQ,KAAMH,YAAY,KAnBzD,4CAsBE,WACE,MAAiCmB,KAAKN,MAA9Bb,EAAR,EAAQA,WAAYD,EAApB,EAAoBA,SAEpB,OACE,sBAAKqB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBrB,IAAaJ,EAASS,UAAY,YAC/DkB,QAASH,KAAKL,yBAHhB,iCAQA,wBACEO,KAAK,SACLD,UAAS,4BAAuBrB,IAAaJ,EAASc,QAAU,YAChEa,QAASH,KAAKH,mBAHhB,4BAQA,wBACEK,KAAK,SACLD,UAAS,6BAAwBpB,GAAc,YAC/CsB,QAASH,KAAKF,cAHhB,sBAQElB,IAAaJ,EAASQ,MAAQH,IAC9B,wBACEqB,KAAK,SACLD,UAAU,4BACVE,QAASH,KAAKD,YAHhB,sBAUJ,6BACE,6BACGrB,EAAkBD,EAAiB,CAAEG,WAAUC,eAC7CuB,KAAI,SAAAC,GAAI,OAAI,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,iBAlEnD,GAAyBC,IAAMC,WCxD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a4076616.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ninterface ReorderOptions {\n  sortType: SortType,\n  isReversed: boolean,\n}\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  let sortedGoods: string[] = [];\n\n  if (sortType === SortType.NONE) {\n    sortedGoods = visibleGoods;\n  } else if (sortType === SortType.ALPHABET) {\n    sortedGoods = visibleGoods\n      .sort((firstGood, secondGood) => firstGood.localeCompare(secondGood));\n  } else if (sortType === SortType.LENGTH) {\n    sortedGoods = visibleGoods\n      .sort((firstGood, secondGood) => firstGood.length - secondGood.length);\n  }\n\n  if (isReversed) {\n    sortedGoods = [...sortedGoods].reverse();\n  }\n\n  return sortedGoods;\n}\n\ninterface AppState {\n  isReversed: boolean,\n  sortType: SortType,\n}\n\nexport class App extends React.Component<{}, AppState> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  handleSortAlphabetically = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  handleSortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  handleReverse = () => {\n    this.setState(state => ({ isReversed: !state.isReversed }));\n  };\n\n  handleReset = () => {\n    this.setState({ sortType: SortType.NONE, isReversed: false });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={`button is-info ${sortType !== SortType.ALPHABET && 'is-light'}`}\n            onClick={this.handleSortAlphabetically}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-success ${sortType !== SortType.LENGTH && 'is-light'}`}\n            onClick={this.handleSortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-warning ${!isReversed && 'is-light'}`}\n            onClick={this.handleReverse}\n          >\n            Reverse\n          </button>\n\n          {(sortType !== SortType.NONE || isReversed) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.handleReset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {getReorderedGoods(goodsFromServer, { sortType, isReversed })\n              .map(good => <li data-cy=\"Good\" key={good}>{good}</li>)}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}