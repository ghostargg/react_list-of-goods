{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","ALPHABET","sort","firstGood","secondGood","localeCompare","LENGTH","length","NONE","Error","reverse","App","state","sortAlphabetically","setState","sortByLength","reset","this","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAeK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAERC,EAAY,YAAOH,GAEvB,OAAQC,GACN,KAAKJ,EAASO,SACZD,EACGE,MAAK,SAACC,EAAWC,GAAZ,OAA2BD,EAAUE,cAAcD,MAC3D,MACF,KAAKV,EAASY,OACZN,EACGE,MAAK,SAACC,EAAWC,GAAZ,OAA2BD,EAAUI,OAASH,EAAWG,UACjE,MACF,KAAKb,EAASc,KACZR,EAAY,YAAOH,GACnB,MACF,QACE,MAAM,IAAIY,MAAM,mBAOpB,OAJIV,GACFC,EAAaU,UAGRV,G,SAtCJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA8CE,IAAMiB,EAAb,4MACEC,MAAQ,CACNb,YAAY,EACZD,SAAUJ,EAASc,MAHvB,EAMEK,mBAAqB,WACnB,EAAKC,SAAS,CAAEhB,SAAUJ,EAASO,YAPvC,EAUEc,aAAe,WACb,EAAKD,SAAS,CAAEhB,SAAUJ,EAASY,UAXvC,EAcEI,QAAU,WACR,EAAKI,UAAS,SAAAF,GAAK,MAAK,CAAEb,YAAaa,EAAMb,gBAfjD,EAkBEiB,MAAQ,WACN,EAAKF,SAAS,CAAEhB,SAAUJ,EAASc,KAAMT,YAAY,KAnBzD,4CAsBE,WACE,MAAiCkB,KAAKL,MAA9Bb,EAAR,EAAQA,WAAYD,EAApB,EAAoBA,SAEpB,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBpB,IAAaJ,EAASO,UAAY,YAC/DmB,QAASH,KAAKJ,mBAHhB,iCAQA,wBACEM,KAAK,SACLD,UAAS,4BAAuBpB,IAAaJ,EAASY,QAAU,YAChEc,QAASH,KAAKF,aAHhB,4BAQA,wBACEI,KAAK,SACLD,UAAS,6BAAwBnB,GAAc,YAC/CqB,QAASH,KAAKP,QAHhB,sBAQEZ,IAAaJ,EAASc,MAAQT,IAC9B,wBACEoB,KAAK,SACLD,UAAU,4BACVE,QAASH,KAAKD,MAHhB,sBAUJ,6BACE,6BACGpB,EAAkBD,EAAiB,CAAEG,WAAUC,eAC7CsB,KAAI,SAAAC,GAAI,OAAI,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,iBAlEnD,GAAyBC,IAAMC,WC5D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d4b2b5c7.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ninterface ReorderOptions {\n  sortType: SortType,\n  isReversed: boolean,\n}\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  let visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods\n        .sort((firstGood, secondGood) => firstGood.localeCompare(secondGood));\n      break;\n    case SortType.LENGTH:\n      visibleGoods\n        .sort((firstGood, secondGood) => firstGood.length - secondGood.length);\n      break;\n    case SortType.NONE:\n      visibleGoods = [...goods];\n      break;\n    default:\n      throw new Error('wrong sort type');\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ninterface AppState {\n  isReversed: boolean,\n  sortType: SortType,\n}\n\nexport class App extends React.Component<{}, AppState> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortAlphabetically = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reverse = () => {\n    this.setState(state => ({ isReversed: !state.isReversed }));\n  };\n\n  reset = () => {\n    this.setState({ sortType: SortType.NONE, isReversed: false });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={`button is-info ${sortType !== SortType.ALPHABET && 'is-light'}`}\n            onClick={this.sortAlphabetically}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-success ${sortType !== SortType.LENGTH && 'is-light'}`}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-warning ${!isReversed && 'is-light'}`}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {(sortType !== SortType.NONE || isReversed) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {getReorderedGoods(goodsFromServer, { sortType, isReversed })\n              .map(good => <li data-cy=\"Good\" key={good}>{good}</li>)}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}