{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","sortAlphabetically","setState","ALPHABET","sortByLength","LENGTH","handleReverse","handleReset","this","reorderedFood","goods","visibleGoods","sort","firstGood","secondGood","localeCompare","length","Error","reverse","getReorderedGoods","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA6CE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,mBAAqB,WACnB,EAAKC,SAAS,CAAEH,SAAUL,EAASS,YAPvC,EAUEC,aAAe,WACb,EAAKF,SAAS,CAAEH,SAAUL,EAASW,UAXvC,EAcEC,cAAgB,WACd,EAAKJ,UAAS,SAAAL,GAAK,MAAK,CAAEC,YAAaD,EAAMC,gBAfjD,EAkBES,YAAc,WACZ,EAAKL,SAAS,CAAEH,SAAUL,EAASM,KAAMF,YAAY,KAnBzD,4CAsBE,WACE,MAAiCU,KAAKX,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SAElBE,EAIEO,KAJFP,mBACAG,EAGEI,KAHFJ,aACAE,EAEEE,KAFFF,cACAC,EACEC,KADFD,YAGIE,EAhEH,SACLC,EADK,GAGJ,IADCX,EACF,EADEA,SAAUD,EACZ,EADYA,WAENa,EAAY,YAAOD,GAEzB,OAAQX,GACN,KAAKL,EAASS,SACZQ,EACGC,MAAK,SAACC,EAAWC,GAAZ,OAA2BD,EAAUE,cAAcD,MAC3D,MACF,KAAKpB,EAASW,OACZM,EACGC,MAAK,SAACC,EAAWC,GAAZ,OAA2BD,EAAUG,OAASF,EAAWE,UACjE,MACF,KAAKtB,EAASM,KACZ,MACF,QACE,MAAM,IAAIiB,MAAM,mBAOpB,OAJInB,GACFa,EAAaO,UAGRP,EAuCiBQ,CAAkBxB,EACtC,CAAEI,WAAUD,eAEd,OACE,sBAAKsB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBrB,IAAaL,EAASS,UAAY,YAC/DmB,QAASrB,EAHX,iCAQA,wBACEoB,KAAK,SACLD,UAAS,4BAAuBrB,IAAaL,EAASW,QAAU,YAChEiB,QAASlB,EAHX,4BAQA,wBACEiB,KAAK,SACLD,UAAS,6BAAwBtB,GAAc,YAC/CwB,QAAShB,EAHX,sBAQEP,IAAaL,EAASM,MAAQF,IAC9B,wBACEuB,KAAK,SACLD,UAAU,4BACVE,QAASf,EAHX,sBAUJ,6BACE,6BACGE,EACEc,KAAI,SAAAC,GAAI,OAAI,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,iBA3EnD,GAAyBC,IAAMC,WC3D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.84c220ed.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ninterface ReorderOptions {\n  sortType: SortType,\n  isReversed: boolean,\n}\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods\n        .sort((firstGood, secondGood) => firstGood.localeCompare(secondGood));\n      break;\n    case SortType.LENGTH:\n      visibleGoods\n        .sort((firstGood, secondGood) => firstGood.length - secondGood.length);\n      break;\n    case SortType.NONE:\n      break;\n    default:\n      throw new Error('wrong sort type');\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ninterface AppState {\n  isReversed: boolean,\n  sortType: SortType,\n}\n\nexport class App extends React.Component<{}, AppState> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortAlphabetically = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  handleReverse = () => {\n    this.setState(state => ({ isReversed: !state.isReversed }));\n  };\n\n  handleReset = () => {\n    this.setState({ sortType: SortType.NONE, isReversed: false });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const {\n      sortAlphabetically,\n      sortByLength,\n      handleReverse,\n      handleReset,\n    } = this;\n\n    const reorderedFood = getReorderedGoods(goodsFromServer,\n      { sortType, isReversed });\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={`button is-info ${sortType !== SortType.ALPHABET && 'is-light'}`}\n            onClick={sortAlphabetically}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-success ${sortType !== SortType.LENGTH && 'is-light'}`}\n            onClick={sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-warning ${!isReversed && 'is-light'}`}\n            onClick={handleReverse}\n          >\n            Reverse\n          </button>\n\n          {(sortType !== SortType.NONE || isReversed) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={handleReset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {reorderedFood\n              .map(good => <li data-cy=\"Good\" key={good}>{good}</li>)}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}